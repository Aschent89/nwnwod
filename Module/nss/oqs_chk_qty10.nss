////////////////////////////////////////////////////////////////////////////////
//  Olander's Questing System
//  oqs_chk_qty10
//  By Don Anderson
//  dandersonru@msn.com
//
//  Called from the Conversation of the Quest Giver
//
//  This is Good for Checking a Minimum Quantity of Items Required To
//  Complete That Segment of the Quest.
//
//  These are Persistent Quests!
//
//  Simply use/copy this and set the Quantity to which Message this is.
//
//  # = Number of nItem Set Below....ie  int nItem = 1;
//  Message Format:  OQS_ITEM# (Variable in String)
//           Tag of Item Required (Actual Text Portion)
//
//  Quantity Format:  OQS_QTY_ITEM# (Variable in Int)
//           Quantity of Items Required
//
//  Reward Format:  OQS_REWARD_GP# (Variable in Int)
//           Quantity of Reward in Gold
//                  OQS_REWARD_IT# (Variable in String)
//           ResRef of Reward Item (Like a Key or Cloak...whatever)
//
//  Experience Generated by Journal XP
//
////////////////////////////////////////////////////////////////////////////////

#include "oqs_inc"

int StartingConditional()
{
  object oPC = GetPCSpeaker();
  object oNPC = OBJECT_SELF;
  object oMod = GetModule();

  int nItem = 10;
  string sQuestN = "OQS_QUEST" + IntToString(nItem);
  string sQuest = GetLocalString(oNPC, sQuestN);
  string sItemS = "OQS_ITEM" + IntToString(nItem);
  string sItem = GetLocalString(oNPC,sItemS);
  string sQty = "OQS_QTY_ITEM" + IntToString(nItem);
  int nQty = GetLocalInt(oNPC,sQty);
  SetLocalInt(oPC,"OQS_TEMPCHECK",nItem);

  //Previous Quest Not Complete
  int nPQ = nItem - 1;
  string sPQN = "OQS_QUEST" + IntToString(nPQ);
  string sPQ = GetLocalString(oNPC, sPQN);
  int nPQS = RetrieveQuestState(sPQ, oPC);
  if(nPQS < 2) return FALSE;

  //No Quest Installed
  if(sQuest == "") return FALSE;

  //Retrieve Highest Quest State
  int nHQS = RetrieveQuestState(sQuest, oPC);

  //Has Not Done This Quest Yet
  if(nHQS == 0) return TRUE;

  //Has Finished This Quest
  if(nHQS == 2) return FALSE;

  object oItem = GetItemPossessedBy(oPC,sItem);

  if(GetIsObjectValid(oItem))
  {
    //Quantity of Quest Items Required
    int nTotal = 0; string sCheck; int nStack = 0;
    object oItem = GetFirstItemInInventory(oPC);
    while(GetIsObjectValid(oItem) == TRUE)
    {
      sCheck = GetTag(oItem);
      if(sItem == sCheck)
      {
        nStack = GetItemStackSize(oItem);
        if(nStack > 1) nTotal = nTotal + nStack;
        else nTotal++;
      }

      oItem = GetNextItemInInventory(oPC);
    }
    if(nTotal < nQty)
    {
      SendMessageToPC(oPC,"You Do NOT have enough of the Quest Items Required!");
      return FALSE;
    }

    //Now Destroy Quantity of Items
    nTotal = 0; sCheck; nStack = 0;
    oItem = GetFirstItemInInventory(oPC);
    while(GetIsObjectValid(oItem) == TRUE)
    {
      sCheck = GetTag(oItem);
      if(sItem == sCheck)
      {
        nStack = GetItemStackSize(oItem);
        if(nStack > 1)
        {
          int nTemp = nQty - nTotal;

          //Stack Bigger Than Current Total
          if(nStack > nTemp)
          {
            int nNew = nStack - nTemp;
            SetItemStackSize(oItem,nNew);
            nTotal = nQty;
            break;
          }

          //Stack Same As Current Total
          else if(nStack == nTemp)
          {
            nTotal = nQty;
            DestroyObject(oItem);
            break;
          }

          //Stack Smaller Than Current Total
          else if(nStack < nTemp)
          {
            nTotal = nTotal + nStack;
            DestroyObject(oItem);
          }
        }
        else
        {
          nTotal++;
          DestroyObject(oItem);
        }

        if(nTotal == nQty) break;
      }

      oItem = GetNextItemInInventory(oPC);
    }

    //Reward Gold
    string sGPReward = "OQS_REWARD_GP" + IntToString(nItem);
    int nGPReward = GetLocalInt(oNPC,sGPReward);
    if(nGPReward > 0) GiveGoldToCreature(oPC,nGPReward);

    //Reward Item
    string sRItemS = "OQS_REWARD_IT" + IntToString(nItem);
    string sRItem = GetLocalString(oNPC,sRItemS);
    if(sRItem != ""){ object oMessage = CreateItemOnObject(sRItem,oPC,1); }

    //Reward XP
    int nXPReward = GetJournalQuestExperience(sQuest);
    if(nXPReward > 0) GiveXPToCreature(oPC,nXPReward);

    //Remove Item From Player
    DestroyObject(oItem);

    //Set the Quest Persistently
    AddPersistentJournalQuestEntry(sQuest, 2, oPC, FALSE, FALSE, FALSE);
    return TRUE;
  }

  else return FALSE;
}
